---
layout: blue
title: "Linux/Ubuntu使用體驗"
subtitle: "因為不滿足於虛擬機上極端惡劣的開發環境，我將一台原本在閒置吃灰的VAIO重新安裝了Ubuntu。"
date: 2016-03-24
author: Benjamin
category: blue
finished: true
---

## 為什麼選擇Ubuntu

**選擇Linux**

* 開源。這意味著安全以及便捷，不會出現盜版以及後門這種問題，直接從官網上就可以找到最新版本的系統鏡像。
* Unix文件系統。因為我已經習慣了Mac的Unix命令行，Windows的DOS命令行實在是令我感到恐懼，相比之下還是同樣基於Unix的Linux系統更加親切。
* 字符界面。Linux有六個可以直接登陸的命令行界面端口，可以不進入圖形界面直接登陸，這對我這個一打開系統四處找Terminal的人來說不能更方便。
* 信仰。不多說什麼了。

**選擇Ubuntu**

* 適合新手。除了虛擬機以外，我尚且沒有直接接觸過Linux系統，而Ubuntu的圖形界面還是比較親切的。
* 比較流行。這意味著至少Bug比較少，Linux作為一堆散亂的零件，還是Bug少一些的發行版本比較適合一開始的折騰。
* 這是我暫時瞭解的最多的Linux發行版本之一，所以我選擇從它開始。

## 安裝

**下載Ubuntu鏡像**

Linux系統完全開源，直接[Ubuntu官網](http://www. ubuntu. com)下載就好。

接下來選擇適合自己的版本，一般會有一個穩定版和一個測試版，測試版可能會出現比較多的Bug，但是有利有弊，它同樣伴隨著新功能。其實穩定版也不會差到那裡去，這方面的選擇根據自己的能力，量力而行。

**燒錄**

從官網上下載下來的是一個`iso`鏡像文件，需要進行燒錄才能夠安裝，如果手邊有閒置的光盤可以用是最好的，直接燒錄進去就可以了。如果沒有光盤，可以利用軟件燒錄在U盤里。在Ubuntu之前這台電腦使用的是Windows系統，所以我使用的是[ISO to USB](http://www. isotousb. com)來進行燒錄(這是一個開源免費軟件），對於OS X以及Linux系統可以使用`dd`命令進行裸讀寫，命令行如下：

{% highlight shell %}
$ dd bs=4M if=~/xxx.iso of=/dev/sdb
{% endhighlight %}

*`if`參數後為ISO文件路徑，`of`參數後為輸出路徑。*

**引導安裝**

在燒錄完成後，U盤就變成了一個安裝光盤，在U盤中打開Ubuntu，就可以看到它的引導頁面。

建議最好選擇由Ubuntu自己來引導安裝，我第一次選擇自己重啓然後從光盤中啓動，結果根本就沒有找到光盤項，最後用Ubuntu自己來引導，傻瓜了很多。

**初始化**

在漫長的等待後（因為我選擇了同時安裝更新和第三方插件），算是把Ubuntu安裝完成了一半。到這裡系統算是裝好了，但是另一半的安裝仍舊需要根據自己的需求繼續安裝插件。

完成安裝後，第一個建立的用戶就是Administrator。

*這裡提醒一點，如果你和我一樣習慣使用Terminal來進行操作，那麼系統語言一定要選英文，否則你的Terminal里所有的目錄名稱都將是中文，相信我，執行`cd`命令的時候你會想選擇死亡。*

## 字符界面終端

拿到新系統當然要先熟悉目錄結構，Ubuntu有六個字符界面的登錄端口，分別是`tty1-6`，使用`Ctrl + Alt + F1-F6`進行切換，輸入用戶名和密碼就可以登錄。

**中文亂碼問題**

如果非要在字符界面編輯中文，那麼可以使用`fbterm`來實現，命令行：

{% highlight shell %}
$ sudo apt-get install fbterm fcitx im-config fcitx-frontend-fbterm
{% endhighlight %}

默認必須在root用戶下才能使用，因此需要執行如下命令賦予普通用戶使用權：

{% highlight shell %}
$ gpasswd -a user viedo
$ chmod u+s /usr/bin/fbterm
{% endhighlight %}

最後修改`~/.fbtermrc`配置，添加：

{% highlight shell %}
input-method=fcitx-fbterm
{% endhighlight %}

然而這樣仍舊體驗不是很好（不如圖形界面），所以我的建議是，如果你要在終端內編輯中文，還是回到圖形界面的Terminal吧。

## 圖形界面終端

因為字符界面的中文支持不是很好（很差），所以偶爾還是得切換到圖形界面的Terminal進行操作。

關於Terminal的配置可以參考[這篇博文](http://benjaminblog.ml/coding/colorfulterminal.html)，這裡需要說一下Linux系統和OS X一些不同的地方。

**Terminal 整體配色方案**

和OS X不同，Linux系統下不能直接打開Terminal配置文件然後設定為`default`，需要在用戶根目錄下創建一個`solarized.sh`的文件，然後將下面的代碼寫進去：

{% highlight shell %}
#!/bin/sh
#
# Shell script that configures gnome-terminal to use solarized theme
# colors. Written for Ubuntu 11.10, untested on anything else.
#
# Solarized theme: http://ethanschoonover.com/solarized
# 
# Adapted from these sources:
# https://gist.github.com/1280177
# http://xorcode.com/guides/solarized-vim-eclipse-ubuntu/

case "$1" in 
    "dark")
PALETTE="#070736364242:#D3D301010202:#858599990000:#B5B589890000:#26268B8BD2D2:#D3D336368282:#2A2AA1A19898:#EEEEE8E8D5D5:#00002B2B3636:#CBCB4B4B1616:#58586E6E7575:#65657B7B8383:#838394949696:#6C6C7171C4C4:#9393A1A1A1A1:#FDFDF6F6E3E3"
      BG_COLOR="#00002B2B3636"
	  FG_COLOR="#65657B7B8383"
      ;;
	"light")
								
PALETTE="#EEEEE8E8D5D5:#D3D301010202:#858599990000:#B5B589890000:#26268B8BD2D2:#D3D336368282:#2A2AA1A19898:#070736364242:#FDFDF6F6E3E3:#CBCB4B4B1616:#9393A1A1A1A1:#838394949696:#65657B7B8383:#6C6C7171C4C4:#58586E6E7575:#00002B2B3636"
	  BG_COLOR="#FDFDF6F6E3E3"
	  FG_COLOR="#838394949696"
	  ;;
	*)
	echo "Usage: solarize [light | dark]"
	exit
	;;																				
esac
																					
gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_background" --type bool false
gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_colors" --type bool false
gconftool-2 --set "/apps/gnome-terminal/profiles/Default/palette" --type string "$PALETTE"
gconftool-2 --set "/apps/gnome-terminal/profiles/Default/background_color" --type string "$BG_COLOR"
gconftool-2 --set "/apps/gnome-terminal/profiles/Default/foreground_color" --type string "$FG_COLOR"
{% endhighlight %}

接下來修改文件權限：

{% highlight shell %}
$ chmod -x solarized.sh
{% endhighlight %}

最後運行文件：

{% highlight shell %}
$ ./solarized dark
{% endhighlight %}

這樣就更改了Terminal的整體配色方案。

## 推薦擴展

Linux基本就是一個乾淨的系統框架，很多東西都是需要自行搭建的。

**Secure delete**

這是一個非常常用的安全刪除命令，它在OS X系統中是自帶的，然而Ubuntu需要自行安裝：

{% highlight shell %}
$ sudo apt-get install secure delete
{% endhighlight %}

使用命令行：

{% highlight shell %}
$ srm file-name
{% endhighlight %}

使用`srm`命令會將文件先覆寫38次再刪除，避免了刪除後被還原的可能性。

**GnuPG**

GPG對我來說必不可少，在Ubuntu下是自帶的，如果使用其他Linux系統，安裝以及使用可以參考[這篇博文](http://benjaminblog.ml/coding/gpg.html)。

**VeraCrypt**

磁盤加密軟件，重視隱私安全的人必不可少。同樣，Ubuntu系統安裝VeraCrypt比較麻煩，有兩個選擇，第一是從[VeraCrypt官網](https://veracrypt.codeplex.com)上下載源碼自己編譯，第二是採用下面的命令行：

{% highlight shell %}
$ sudo add-apt-repository ppa:unit193/encryption
$ sudo apt-get update
$ sudo apt-get install veracrypt
{% endhighlight %}

最後運行VeraCrypt：

{% highlight shell %}
$ veracrypt
{% endhighlight %}

卸載命令：

{% highlight shell %}
$ sudo apt-get remove veracrypt
{% endhighlight %}

## 優點

**比Windows使用體驗好**

在這之前這台電腦安裝的是Windows7旗艦版，硬件也不錯，內存500G，按理來說也算是個中配了，然而使用體驗很差，開機速度慢、運行卡頓、機身滾燙，我一直以為是因為是幾年前的機器該淘汰了，然而裝完Ubuntu我才知道是系統的問題。

現在開機速度很快，休眠耗電量少，風扇一般情況下不會轉，機身溫度保持在可以接受的範圍內。

**拯救了我的快捷鍵**

在這之前這台電腦上`Fn`鍵是不起作用的，我無法用快捷鍵調節亮度和聲音，結果Ubuntu完全拯救了我。

不僅如此，Ubuntu還支持觸摸板的快捷操作，比如雙指點按代表右鍵，雙指滾屏這一類的都完美支持。

**字符界面使用感受極佳**

字符界面除了不支持中文以外，其他功能都相當齊全，自帶語法高亮，平時管理文件修改系統文件非常方便。

## 缺點

**中文支持問題**

Linux系統向來對中文的支持非常之差，在Ubuntu下即使找到了一個能用的中文輸入法，也經常無法輸入正確字符，對於繁體的支持就更差了。

雖然有建議用搜狗輸入法，但是我覺得想想這種賣隱私的國產軟件還是可以放棄了。

總而言之，Linux對中文用戶很不親切，還是學好英文吧。

**一堆散亂的零件**

在這之前我看到過有人將Linux系統比作一堆散亂的零件，它經常不管不顧出現問題然後折騰一夜才能救活，現在我也是略有體會。

不僅所有的命令行都是得自己一點點搭建起來，還經常得自己重新編譯。

所以我還是建議在沒有命令行操作基礎的情況下不要碰Linux，先用Mac的Terminal把命令行練熟，否則在Linux系統下連管理文件都很費力。

---

參考內容：
<br><http://linuxg.net/how-to-install-veracrypt-1-0f-1-on-ubuntu-15-04-ubuntu-14-10-ubuntu-14-04-and-derivative-systems/> 
<br><http://www.guokr.com/blog/749084/> 
<br><http://www.cnblogs.com/KarryWang/p/4583436.html>



